aws_eip.nat[0]: Refreshing state... [id=eipalloc-011e983ddc2ab2044]
aws_vpc.main: Refreshing state... [id=vpc-04ec0f6af19324a3f]
aws_eip.nat[1]: Refreshing state... [id=eipalloc-00e38017e9c6b6807]
aws_internet_gateway.igw: Refreshing state... [id=igw-09d2eee332541165b]
aws_subnet.public[1]: Refreshing state... [id=subnet-08d1c6e555f3df4e7]
aws_subnet.public[0]: Refreshing state... [id=subnet-00a78e54678075517]
aws_subnet.private[1]: Refreshing state... [id=subnet-0eeb28ddc439b87cd]
aws_lb_target_group.app: Refreshing state... [id=arn:aws:elasticloadbalancing:us-east-1:154166281381:targetgroup/myapp-tg/e758403337d67986]
aws_security_group.alb_sg: Refreshing state... [id=sg-0cecd9223da1aa6cf]
aws_security_group.bastion_sg: Refreshing state... [id=sg-05b213af592fc5483]
aws_subnet.private[0]: Refreshing state... [id=subnet-0e26821f2bc4a0f8b]
aws_route_table.public: Refreshing state... [id=rtb-01d9c0ce3602b6ee0]
aws_nat_gateway.nat[1]: Refreshing state... [id=nat-0299149efebe82d34]
aws_nat_gateway.nat[0]: Refreshing state... [id=nat-07ae69f7ff6d5b503]
aws_lb.app: Refreshing state... [id=arn:aws:elasticloadbalancing:us-east-1:154166281381:loadbalancer/app/myapp-alb/1ebd0b8889d15a12]
aws_db_subnet_group.rds: Refreshing state... [id=myapp-db-subnet-group]
aws_route_table.private[1]: Refreshing state... [id=rtb-0a36145e370be36ac]
aws_route_table.private[0]: Refreshing state... [id=rtb-09c1c20187e5f9f7b]
aws_route_table_association.public_assoc[0]: Refreshing state... [id=rtbassoc-0298e1c3a087ac342]
aws_route_table_association.public_assoc[1]: Refreshing state... [id=rtbassoc-0cf2544e56905b3c0]
aws_security_group.ec2_sg: Refreshing state... [id=sg-0852d941bbca63a14]
aws_route_table_association.private_assoc[1]: Refreshing state... [id=rtbassoc-03ec61ac8fe888886]
aws_route_table_association.private_assoc[0]: Refreshing state... [id=rtbassoc-0c6f416a32494bba7]
aws_security_group.rds_sg: Refreshing state... [id=sg-0cc4dc84551198e0f]
aws_launch_template.app: Refreshing state... [id=lt-0359ef2b707ba0529]
aws_lb_listener.http: Refreshing state... [id=arn:aws:elasticloadbalancing:us-east-1:154166281381:listener/app/myapp-alb/1ebd0b8889d15a12/479150c7cd9840c4]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_autoscaling_group.app will be created
  + resource "aws_autoscaling_group" "app" {
      + arn                              = (known after apply)
      + availability_zones               = (known after apply)
      + default_cooldown                 = (known after apply)
      + desired_capacity                 = 2
      + force_delete                     = false
      + force_delete_warm_pool           = false
      + health_check_grace_period        = 300
      + health_check_type                = (known after apply)
      + id                               = (known after apply)
      + ignore_failed_scaling_activities = false
      + load_balancers                   = (known after apply)
      + max_size                         = 4
      + metrics_granularity              = "1Minute"
      + min_size                         = 2
      + name                             = (known after apply)
      + name_prefix                      = (known after apply)
      + predicted_capacity               = (known after apply)
      + protect_from_scale_in            = false
      + region                           = "us-east-1"
      + service_linked_role_arn          = (known after apply)
      + target_group_arns                = [
          + "arn:aws:elasticloadbalancing:us-east-1:154166281381:targetgroup/myapp-tg/e758403337d67986",
        ]
      + vpc_zone_identifier              = [
          + "subnet-0e26821f2bc4a0f8b",
          + "subnet-0eeb28ddc439b87cd",
        ]
      + wait_for_capacity_timeout        = "10m"
      + warm_pool_size                   = (known after apply)

      + availability_zone_distribution (known after apply)

      + capacity_reservation_specification (known after apply)

      + launch_template {
          + id      = "lt-0359ef2b707ba0529"
          + name    = (known after apply)
          + version = "$Latest"
        }

      + mixed_instances_policy (known after apply)

      + traffic_source (known after apply)
    }

  # aws_db_instance.postgres will be created
  + resource "aws_db_instance" "postgres" {
      + address                               = (known after apply)
      + allocated_storage                     = 20
      + apply_immediately                     = false
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + backup_retention_period               = (known after apply)
      + backup_target                         = (known after apply)
      + backup_window                         = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + character_set_name                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + database_insights_mode                = (known after apply)
      + db_name                               = (known after apply)
      + db_subnet_group_name                  = "myapp-db-subnet-group"
      + dedicated_log_volume                  = false
      + delete_automated_backups              = true
      + domain_fqdn                           = (known after apply)
      + endpoint                              = (known after apply)
      + engine                                = "postgres"
      + engine_lifecycle_support              = (known after apply)
      + engine_version                        = (known after apply)
      + engine_version_actual                 = (known after apply)
      + hosted_zone_id                        = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = "myapp-postgres"
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.t3.micro"
      + iops                                  = (known after apply)
      + kms_key_id                            = (known after apply)
      + latest_restorable_time                = (known after apply)
      + license_model                         = (known after apply)
      + listener_endpoint                     = (known after apply)
      + maintenance_window                    = (known after apply)
      + master_user_secret                    = (known after apply)
      + master_user_secret_kms_key_id         = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + multi_az                              = (known after apply)
      + nchar_character_set_name              = (known after apply)
      + network_type                          = (known after apply)
      + option_group_name                     = (known after apply)
      + parameter_group_name                  = (known after apply)
      + password                              = (sensitive value)
      + password_wo                           = (write-only attribute)
      + performance_insights_enabled          = false
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + publicly_accessible                   = false
      + region                                = "us-east-1"
      + replica_mode                          = (known after apply)
      + replicas                              = (known after apply)
      + resource_id                           = (known after apply)
      + skip_final_snapshot                   = true
      + snapshot_identifier                   = (known after apply)
      + status                                = (known after apply)
      + storage_throughput                    = (known after apply)
      + storage_type                          = (known after apply)
      + tags_all                              = (known after apply)
      + timezone                              = (known after apply)
      + username                              = "mydbuser"
      + vpc_security_group_ids                = [
          + "sg-0cc4dc84551198e0f",
        ]
    }

  # aws_instance.bastion will be created
  + resource "aws_instance" "bastion" {
      + ami                                  = "ami-080e1f13689e07408"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + force_destroy                        = false
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t3.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "my-keypair"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + region                               = "us-east-1"
      + secondary_private_ips                = (known after apply)
      + security_groups                      = [
          + "sg-05b213af592fc5483",
        ]
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = "subnet-00a78e54678075517"
      + tags                                 = {
          + "Name" = "myapp-bastion"
        }
      + tags_all                             = {
          + "Name" = "myapp-bastion"
        }
      + tenancy                              = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + primary_network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + bastion_public_ip = (known after apply)
  + rds_endpoint      = (known after apply)
aws_autoscaling_group.app: Creating...
aws_instance.bastion: Creating...
aws_db_instance.postgres: Creating...
aws_autoscaling_group.app: Still creating... [00m10s elapsed]
aws_instance.bastion: Still creating... [00m10s elapsed]
aws_db_instance.postgres: Still creating... [00m10s elapsed]
aws_instance.bastion: Creation complete after 16s [id=i-0cf94a54d69d5b3da]
aws_autoscaling_group.app: Still creating... [00m20s elapsed]
aws_db_instance.postgres: Still creating... [00m20s elapsed]
aws_autoscaling_group.app: Creation complete after 21s [id=terraform-20250902191050403100000001]
aws_db_instance.postgres: Still creating... [00m30s elapsed]
aws_db_instance.postgres: Still creating... [00m40s elapsed]
aws_db_instance.postgres: Still creating... [00m50s elapsed]
aws_db_instance.postgres: Still creating... [01m00s elapsed]
aws_db_instance.postgres: Still creating... [01m10s elapsed]
aws_db_instance.postgres: Still creating... [01m20s elapsed]
aws_db_instance.postgres: Still creating... [01m30s elapsed]
aws_db_instance.postgres: Still creating... [01m40s elapsed]
aws_db_instance.postgres: Still creating... [01m50s elapsed]
aws_db_instance.postgres: Still creating... [02m00s elapsed]
aws_db_instance.postgres: Still creating... [02m10s elapsed]
aws_db_instance.postgres: Still creating... [02m20s elapsed]
aws_db_instance.postgres: Still creating... [02m30s elapsed]
aws_db_instance.postgres: Still creating... [02m40s elapsed]
aws_db_instance.postgres: Still creating... [02m50s elapsed]
aws_db_instance.postgres: Still creating... [03m00s elapsed]
aws_db_instance.postgres: Still creating... [03m10s elapsed]
aws_db_instance.postgres: Still creating... [03m20s elapsed]
aws_db_instance.postgres: Still creating... [03m30s elapsed]
aws_db_instance.postgres: Still creating... [03m40s elapsed]
aws_db_instance.postgres: Still creating... [03m50s elapsed]
aws_db_instance.postgres: Still creating... [04m00s elapsed]
aws_db_instance.postgres: Still creating... [04m10s elapsed]
aws_db_instance.postgres: Still creating... [04m20s elapsed]
aws_db_instance.postgres: Still creating... [04m30s elapsed]
aws_db_instance.postgres: Still creating... [04m40s elapsed]
aws_db_instance.postgres: Still creating... [04m50s elapsed]
aws_db_instance.postgres: Still creating... [05m00s elapsed]
aws_db_instance.postgres: Still creating... [05m10s elapsed]
aws_db_instance.postgres: Still creating... [05m20s elapsed]
aws_db_instance.postgres: Creation complete after 5m23s [id=db-OFRHNQAIBNGMPHG5OQ3YF65KZQ]

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

alb_dns_name = "myapp-alb-971838469.us-east-1.elb.amazonaws.com"
bastion_public_ip = "18.212.156.95"
rds_endpoint = "myapp-postgres.cyx6w40yanrf.us-east-1.rds.amazonaws.com:5432"
